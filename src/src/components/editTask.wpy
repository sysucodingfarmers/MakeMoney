<style lang="less">
  .page{
    line-height: 1.6;
    background-color: #f8f8f8;
    height:100%;
  }
  .img-block{
    float:left;
    display: block;
    position:relative;
    width: 140rpx;
    height: 140rpx;
    margin:10rpx 10rpx 10rpx 10rpx;
    padding:0 0 0 0;
    border: 1px solid #D9D9D9;
  }
  .img-block-img{ 
    position:absolute;
    left:0;
    z-index:5; 
    height:100%;
    width:100%;
  }
  .img-block-icon{
    position:absolute;
    right:2px;
    z-index:10;
  }
  .img-tip{
    position:absolute;
    bottom:5rpx;
    right:28rpx;
    color: #888;
    font-size: 28rpx;
  }
  .subbmit-button{
    margin-left:20px;
    margin-right:20px;
    margin-top:25px;
    justify-content: center;
    align-item: center;
  }
  ::-webkit-scrollbar{
    width: 0;
    height: 0;
    color: transparent;
  }
</style>
<template>
  <van-cell-group title="基本信息">
    <van-field
      value="{{taskInfo.title}}"
      label="任务名称"
      placeholder="请输入任务名称"
      clearable
      required
      error-message="{{name_error}}"
      bind:input="EditName"
    ></van-field>
    <van-field
      value="{{taskInfo.detail}}"
      label="任务详情"
      type="textarea"
      placeholder="请输入任务详情"
      clearable
      required
      error-message="{{detail_error}}"
      autosize
      bind:input="EditDetail"
    ></van-field>
    <van-field
      value="{{taskInfo.pay}}"
      label="任务报酬"
      type="number"
      clearable
      required
      error-message="{{pay_error}}"
      bind:input="EditPay"
    ></van-field>
    <van-field
      value="{{taskInfo.receiver_limit}}"
      label="任务人数"
      type="number"
      clearable
      required
      error-message="{{receiver_limit_error}}"
      bind:input="EditReceiverLimit"
    ></van-field>
    <van-field
      value="{{taskInfo.start_time}}"
      label="开始时间"
      placeholder="请输入开始时间"
      required
      readonly
      bindtap="EditStartTime"
    ></van-field>
    <van-field
      value="{{taskInfo.end_time}}"
      label="结束时间"
      placeholder="请输入结束时间"
      required
      readonly
      error-message="{{time_error}}"
      bindtap="EditEndTime"
    ></van-field>
    <van-field
      value="{{taskInfo.type}}"
      label="任务类型"
      readonly
    ></van-field>
  </van-cell-group>
  <van-cell-group title="额外信息">
    <van-cell title="任务图片" icon="photo-o">
      <van-icon 
        slot="right-icon" 
        name="add-o" 
        size="20px" 
        style="margin-top:3px;"
        bindtap="AddImage"
      ></van-icon>
    </van-cell>
    <van-cell wx:if="{{images.length>0}}">
      <repeat for="{{images}}" key="index" index="index" item="item">
        <view class="img-block">
          <van-icon
            slot="right-icon"
            name="close"
            size="15px"
            class="img-block-icon"
            bindtap="deleteImage({{index}})"
          ></van-icon>
          <image 
            src="{{item}}" 
            mode="aspectFill" 
            class="img-block-img"
            bindtap="previewImage({{item}})"
          ></image>
        </view>
      </repeat>
      <view class="img-tip">{{images.length}}/8</view>
    </van-cell>
    <van-cell 
      title="问卷链接" 
      wx:if="{{taskInfo.type === '问卷调查'}}"
      is-link
      icon="description"
      bind:click="EditQuery"
    ></van-cell>
    <van-cell>
      <image src="{{test}}"></image>
    </van-cell>
  </van-cell-group>
  <view class="subbmit-button">
    <van-button type="primary" round size="large" bindtap="subbmit">发布</van-button>
  </view>
  <van-popup
    show="{{showStartTimeSelector}}"
    position="bottom"
  >
    <van-datetime-picker
      type="datetime"
      confirm-button-text="确认"
      cancel-button-text="取消"
      title="开始时间"
      bind:confirm="ConfirmStartTime"
      bind:cancel="CancelStartTime"
    ></van-datetime-picker>
  </van-popup>
  <van-popup
    show="{{showEndTimeSelector}}"
    position="bottom"
    >
    <van-datetime-picker
      type="datetime"
      confirm-button-text="确认"
      cancel-button-text="取消"
      title="结束时间"
      bind:confirm="ConfirmEndTime"
      bind:cancel="CancelEndTime"
    ></van-datetime-picker>
  </van-popup>
  <van-toast id="van-toast"></van-toast>
  <van-dialog id="van-dialog" />
  <van-dialog
    title="是否支付"
    use-slot
    show="{{ showPay }}"
    show-cancel-button
    bind:close="onClose"
    bind:confirm="pay"
  >
    <view style="text-align:center; margin-top:20px; margin-bottom:20px;">
      <van-icon name="gold-coin" size="120px" color="green"></van-icon>
    </view>
  </van-dialog>
</template>
<script>
  import wepy from 'wepy'
  import caculateDate from '../data/CaculateDate'
  import Dialog from './van/dialog/dialog'
  import Toast from './van/toast/toast'

  export default class EditTask extends wepy.component {
    events = {
      
    }
    props = {
      query: {
        type: Object,
        twoWay: true
      },
      images: {
        type: Object,
        twoWay: true
      },
      taskInfo: {
        type: Object,
        twoWay: true
      },
      taskid: {
        type: Number,
        twoWay: true
      },
      isEdit: {
        type: Boolean,
        twoWay: true
      }
    }
    data = {
      name_error: '',               //名称错误提示
      detail_error: '',             //详情错误提示
      pay_error: '',                //报酬错误提示
      receiver_limit_error: '',     //接受者人数错误提示
      time_error: '',               //时间错误提示
      showStartTimeSelector: false, //开始时间选择
      showEndTimeSelector: false,   //结束时间选择
      task: {},
      showPay: false
    }
    methods = {
      //编辑任务名称
      EditName(e) {
        var val = e.detail;
        if (val === '') {
          this.name_error = '名称不能为空';
          this.$apply();
        }
        else {
          this.taskInfo.title = val;
          this.name_error = '';
          this.$apply();
        }
      },
      //填写任务详情
      EditDetail(e) {
        var val = e.detail;
        if (val === '') {
          this.detail_error = '详情不能为空';
          this.$apply();
        }
        else {
          this.taskInfo.detail = val;
          this.detail_error = '';
          this.$apply();
        }
      },
      //填写任务每人报酬
      EditPay(e) {
        var val = Number(e.detail);
        if (val <= 0 || val >= 1000 || isNaN(val)) {
          this.pay_error = '请输入正确的浮点数(1-1000)';
          this.$apply();
        }
        else {
          this.taskInfo.pay = val;
          this.pay_error = '';
          this.$apply();
        }
      },
      //编辑限制人数
      EditReceiverLimit(e) {
        var val = Number(e.detail);
        if (val <= 0 || val >= 1000 || isNaN(val) || val % 1 != 0) {
          this.receiver_limit_error = '请输入正确的整数(1-1000)';
          this.$apply();
        }
        else {
          this.taskInfo.receiver_limit = val;
          this.receiver_limit_error = '';
          this.$apply();
        }
      },
      //编辑开始时间
      EditStartTime(e) {
        this.showStartTimeSelector = true;
      },
      ConfirmStartTime(e) {
        var date = new Date(e.detail);
        this.taskInfo.start_time = caculateDate.DateToString(date);
        this.showStartTimeSelector = false;
        var eTime = caculateDate.StringToDate(this.taskInfo.end_time);
        if (date.getTime() >= eTime.getTime()) {
          this.time_error = '无效时间';
        }
        else {
          this.time_error = '';
        }
        this.$apply();
      },
      CancelStartTime(e) {
        this.showStartTimeSelector = false;
      },
      //编辑结束时间
      EditEndTime(e) {
        this.showEndTimeSelector = true;
      },
      ConfirmEndTime(e) {
        var date = new Date(e.detail);
        this.taskInfo.end_time = caculateDate.DateToString(date);
        this.showEndTimeSelector = false;
        var sTime = caculateDate.StringToDate(this.taskInfo.start_time);
        if (date.getTime() <= sTime.getTime()) {
          this.time_error = '无效时间';
        }
        else {
          this.time_error = '';
        }
        this.$apply();
      },
      CancelEndTime(e) {
        this.showEndTimeSelector = false;
      },
      //添加本地图片
      AddImage() {
          const that = this;
          wx.chooseImage({
              count: 1,
              sizeType: ['original', 'compressed'],
              sourceType: ['album', 'camera'],
              success(res) {
                that.images = that.images.concat([res.tempFilePaths[0]]);
                that.$apply();
              },
              fail(res) {
                console.log("fail");
              }
          });
      },
      //预览本地图片
      previewImage(item) {
          wx.previewImage({
              current: item, // 当前显示图片的http链接
              urls: this.images // 需要预览的图片http链接列表
          });
      },
      //删除上传的图片
      deleteImage(index) {
        var that = this;
        Dialog.confirm({
          title: '是否删除',
          message: '删除就无法回复'
        }).then(() => {
            that.images.splice(index,1);
            that.$apply();
        });
      },
      //编辑问卷
      EditQuery(e) {
        var query = JSON.stringify(this.taskInfo.extra_content.query);
        wepy.navigateTo({
          url: "createQuery?query=" + query
        });
      },
      //提交数据
      subbmit(e) {

        //判断是否能勾提交
        //....................................................
        var canSubmmit = true;
        //判断任务名称
        this.name_error = this.taskInfo.title === '' ? '名字不能为空' : this.name_error;
        canSubmmit = this.name_error != '' ? false : canSubmmit;
        //判断任务详情
        this.detail_error = this.taskInfo.detail === '' ? '详情不能为空' : this.detail_error;
        canSubmmit = this.detail_error != '' ? false : canSubmmit;
        //判断日期
        this.time_error = (this.taskInfo.end_time === '' || this.taskInfo.start_time === '') ? "时间未填" : this.time_error;
        canSubmmit = this.time_error != '' ? false : canSubmmit;
        //判断报酬是否为零
        this.pay_error = this.taskInfo.pay === 0 ? "报酬不能为空" : this.pay_error;
        canSubmmit = this.pay_error != '' ? false : canSubmmit;
        //判断允许人数是否为零
        this.receiver_limit_error = this.taskInfo.receiver_limit === 0 ? "人数不能为空" : this.receiver_limit_error;
        canSubmmit = this.receiver_limit_error != '' ? false : canSubmmit;
        //判断问卷任务是否为空
        if (this.taskInfo.type === '问卷调查' && this.taskInfo.extra_content.query.length === 0) {
          canSubmmit = false;
          Dialog.alert({
            title: '错误',
            message: '问卷为空'
          });
        }
        this.$apply();
        //..............................................................
        
        //能提交
        //..............................................................
        if (canSubmmit) {
          // var mes = JSON.stringify(["修改","删除"]);
          //处理问卷
          var query = this.taskInfo.extra_content.query;
          var questions = [];
          var options = [];
          var types = [];
          query.forEach(item=>{
            //types
            if (item.type == '问答题' && item.limit == 'number') {
              types.push('数字题');
            }
            else {
              types.push(item.type);
            }
            //questions
            questions.push(item.content.question);
            //options
            if (item.type == '问答题') {
              options.push([]);
            }
            else {
              var ops = [];
              item.content.option.forEach(op=>{
                ops.push(op.ans);
              });
              options.push(ops);
            }
          });

          
          var task = {
            id: this.taskInfo.id,
            title: this.taskInfo.title,
            type: this.taskInfo.type,
            pay: this.taskInfo.pay,
            detail: this.taskInfo.detail,
            start_time: caculateDate.StringToDate(this.taskInfo.start_time),
            end_time: caculateDate.StringToDate(this.taskInfo.end_time),
            receiver_limit: this.taskInfo.receiver_limit,
            receiver_number: 0,
            state: 0,
            questions: questions,
            options: options,
            types: types
            // images: this.images
          }
          console.log(task);
          this.task = task;

          var that = this;
          //修改问卷
          //...............................................................
          if (that.isEdit) {
            console.log('修改');
            var mes = JSON.stringify(["修改","删除"]);
            Dialog.confirm({
              message: '是否修改',
            })
            .then(function(res){
              return wepy.request({
                      url: that.$parent.$parent.globalData.ip + 'modify/task_info',
                      method: 'POST',
                      header: {
                        'content-type': 'application/json',
                        'session_id' : that.$parent.$parent.globalData.session_id,
                        'user_id': that.$parent.$parent.globalData.userInfo.id
                      },
                      data: that.task
                    });
            })
            .then(function(res){
              console.log(res.data);
              Toast.success({ message: '修改成功', duration: 1000 });
              const timer2 = setInterval(() => {
                clearInterval(timer2);
                Toast.clear();
                wx.redirectTo({
                  url: 'taskDetail?id=' + that.taskid + '&mes=' + mes
                });
              }, 1000);
            });
          }
          //.................................................................
          //提交任务
          else {
            console.log('提交');
            that.showPay = true;
            that.$apply();
          }
        }
        //.......................................................
      },
      //支付
      pay() {
        var that = this;
        var task = this.task;
        var tid; //后端返回的任务id
        var mes = JSON.stringify(["修改","删除"]);
        //上传任务并得到任务id
        //.......................................................
        wepy.request({
          url: this.$parent.$parent.globalData.ip + 'task/sponsor',
          method: 'POST',
          header: {
            'content-type': 'application/json',
            'session_id' : this.$parent.$parent.globalData.session_id,
            'user_id': this.$parent.$parent.globalData.userInfo.id
          },
          data: task
        })
        .then(function(res){
          tid = res.data;
          console.log('任务id为', tid);

          //通过任务id，上传任务图片
          var image_length = 0;
          //如果image为空，即跳转页面
          if (that.images.length == image_length) {
            Toast.success({ message: '发布成功', duration: 1000 });
            const timer1 = setInterval(() => {
              clearInterval(timer1);
              Toast.clear();
              wx.redirectTo({
                url: 'taskDetail?id=' + tid + '&mes=' + mes
              });
            }, 1000);
          }
          //如果不为空
          else {
            Toast.loading({
              mask: true,
              message: '上传图片中'
            });
            for (var i = 0; i < that.images.length; ++i) {
              wx.uploadFile({
                url: that.$parent.$parent.globalData.ip + 'task/postImage',
                filePath: that.images[i],
                name: 'image',
                header: {'content-type': 'multipart/form-data'},
                formData: {
                  'task_id': tid
                },
                success(res) {
                  // console.log(res.data); // 返回那边的链接
                  console.log('图片', i);
                  //全部上传成功，跳转页面
                  if (i == that.images.length) {
                    Toast.clear();
                    Toast.success({ message: '上传成功', duration: 1000 });
                    const timer = setInterval(() => {
                      clearInterval(timer);
                      Toast.clear();
                      wx.redirectTo({
                        url: 'taskDetail?id=' + tid + '&mes=' + mes
                      });
                    }, 1000);
                  }
                }
              });
            }
          }
        })
        //........................................................
      },
      //取消支付
      onClose() {
        this.showPay = false;
        this.$apply();
      }
    }
  }
</script>