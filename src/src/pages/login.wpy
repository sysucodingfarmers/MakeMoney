<style lang="less">
  .button {
    margin: 2%;
  }
</style>
<template>
  <view style="position: fixed; width: 100%; height: 100%;">
    <mynavbar title="登录" lefttext="返回" leftarrow="true"></mynavbar>
    <van-cell-group>
      <van-field
        value="{{ studentId }}"
        clearable
        label="学号"
        errorMessage="{{ studentIdErrorMessage }}"
        placeholder="{{ studentIdPlaceholder }}"
        bind:change="onStudentIdChange"
        focus="{{true}}"
        left-icon="user-o"
      />

      <van-field
        value="{{ password }}"
        type="{{pass_input_type}}"
        label="密码"
        clearable
        placeholder="{{ passwordPlaceholder }}"
        errorMessage="{{ passwordErrorMessage }}"
        bind:change="onPasswordChange"
        left-icon="ellipsis"
        right-icon="{{eye_icon}}"
        bind:click-icon="see_pass"
        bind:confirm="onClickLogin"
      />
    </van-cell-group>
    <view class="button">
      <van-button size="large" type="info" bind:click="onClickLogin">登录</van-button>
    </view>
    <view class="button">
      <van-button size="large" plain type="info" bind:click="onClickRegister">注册</van-button>
    </view>
    <van-toast id="van-toast"></van-toast>
  </view>
  <van-dialog id='van-dialog' />
  <van-action-sheet
    show="{{logintypeshow}}"
    actions="{{actions}}"
    bind:select="onSelect"
    bind:cancel="onClose"
    cancel-text="取消"
    close-on-click-overlay="true"
    safe-area-inset-bottom="true"
    overlay="true"
  />
</template>

<script>
  import wepy from 'wepy'
  import MyNavBar from '../components/mynavbar'
  import Toast from '../components/van/toast/toast'
  import Dialog from '../components/van/dialog/dialog'
  import JsonToObject from '../data/JsonToObject'

  var phone_reg = /^[1](([3][0-9])|([4][5-9])|([5][0-3,5-9])|([6][5,6])|([7][0-8])|([8][0-9])|([9][1,8,9]))[0-9]{8}$/;
  var email_reg = /^(\w)+(\.\w+)*@(\w)+((\.\w+)+)$/;
  var studentId_reg = /^[0-9]{8,8}$/;

  export default class Login extends wepy.page {
    data = {
      eye_icon: 'closed-eye',
      pass_input_type: 'password',
      studentId: "",
      studentIdErrorMessage: "",
      studentIdPlaceholder: "请输入学号",
      password: "",
      passwordErrorMessage: "",
      passwordPlaceholder: "请输入密码",
      userinfo: {},
      actions: [
        {
          key: 'phone',
          name: '通过手机注册'
        },
        {
          key: 'email',
          name: '通过邮箱注册'
        }
      ],
      logintypeshow: false
    }

    components = {
      mynavbar: MyNavBar
    }

    methods = {
      see_pass() {
        if (this.eye_icon == 'closed-eye') {
          this.eye_icon = 'eye-o'
          this.pass_input_type = 'text'
        }
        else if (this.eye_icon == 'eye-o') {
          this.eye_icon = 'closed-eye'
          this.pass_input_type = 'password'
        }
      },
      onStudentIdChange(e) {
        this.studentId = e.detail;
      },

      onPasswordChange(e) {
        this.password = e.detail;
      },

      onClickLogin() {
        this.login()
      },
      onClickRegister() {
        // this.$navigate('./register');
        this.logintypeshow = true;
      },
      onSelect(e) {
        this.logintypeshow = false
        if (e.detail.key == 'phone')
          wepy.navigateTo({
            url: 'register?type=phone'
          });
        else if (e.detail.key == 'email')
          wepy.navigateTo({
            url: 'register?type=email'
          })
      },
      onClose() {
        this.logintypeshow = false;
      }
    }
    login() {
      var isEverythingGood = true;
      // 检查学号是否为空
      if (this.studentId.length == 0) {
        this.studentIdErrorMessage = "学号不能为空";
        isEverythingGood = false;
      } else if (!studentId_reg.test(this.studentId)) {
        this.studentIdErrorMessage = "学号格式错误";
        isEverythingGood = false;
      } else {
        this.studentIdErrorMessage = "";
      }

      //检查密码是否为空
      if (this.password.length == 0) {
        this.passwordErrorMessage = "密码不能为空";
        isEverythingGood = false;
      } else {
        this.passwordErrorMessage = "";
      }

      //只有检查通过才向后端提交学号密码
      if (!isEverythingGood) {
        return;
      }

      // 将学号和密码交给后端检验, 期间所有按钮不可用
      Toast.loading({
        mask: true,
        message: '登录中...'
      });

      var that = this
      var _data = {
        id: parseInt(this.studentId),
        password: this.password
      }
      wx.request({
        url: this.$parent.globalData.ip + 'login',
        method: 'POST',
        data: _data,
        header: {
          'content-type': 'application/json'
        },
        success: function(res) {
          Toast.clear();
          if (res.data == undefined || res.data.id == undefined || res.data.id == null) {
            Toast.fail("学号或密码错误")
          }
          else 
          {
            Toast.success('登录成功');
            that.$parent.globalData.loginData.studentId = ""
            that.$parent.globalData.loginData.password = ""
            that.$parent.globalData.session_id = res.header.session_id;
            that.$parent.globalData.userInfo = {}
            if (res.data.profile) {
              that.$parent.globalData.userInfo.avatar = JsonToObject.GetAvatarUrl(res.data.profile.replace(/\"/g, ""), that.$parent.globalData.ip)
            }
            else
              that.$parent.globalData.userInfo.avatar = 'https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1560754276&di=9e6e09a4563fa27b2b4c20b7a5a58df7&src=http://pic.51yuansu.com/pic3/cover/01/69/80/595f67bf2026f_610.jpg'
            that.$parent.globalData.userInfo.username = res.data.username;
            that.$parent.globalData.userInfo.id = res.data.id;
            that.$parent.globalData.userInfo.email = res.data.email;
            that.$parent.globalData.userInfo.phone = res.data.phone;
            that.$parent.globalData.userInfo.school = res.data.school;
            that.$parent.globalData.userInfo.major = res.data.major;
            that.$parent.globalData.loginData.state = true;
            wx.navigateBack()
          }
        },
        fail: (res) => {
          Toast.fail('网络错误')
        }
      });
    }
    onLoad(options) {
      if (this.$parent.globalData.userInfo == undefined) {
        this.$parent.globalData.userInfo = {};
      }
    }
    onShow() {
      this.studentId = this.$parent.globalData.loginData.studentId
      this.password = this.$parent.globalData.loginData.password
    }
  }
</script>
