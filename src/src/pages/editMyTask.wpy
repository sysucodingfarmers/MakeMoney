<style lang="less">
  
</style>
<template>
  <view style="position: fixed; width: 100%; height: 100%;">
    <mynavbar title="修改任务" lefttext="返回" leftarrow="true"></mynavbar> 
    <view class="page">
      <scroll-view scroll-y="true" style="height: 87%;">
        <edittask :query.sync="query" :images.sync="images" :taskInfo.sync="taskInfo" :taskid.sync="taskid" :isEdit.sync="isEdit"></edittask>
      </scroll-view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import MyNavBar from '../components/mynavbar'
  import EditTask from '../components/editTask'
  import TemplateToQuery from '../data/TemplateToQuery'
  import caculateDate from '../data/CaculateDate'
  // import TasksData from '../data/TempTaskData'

  export default class EditMyTask extends wepy.page {
    components = {
      mynavbar: MyNavBar,
      edittask: EditTask
    }
    data = {
      //判断是否是修改
      isEdit: true,
      //任务的id
      taskid: 0,
      //辅助参数
      isQueryChange: false,
      //辅助数组
      query: [],
      //本地图片上传路径
      images: [],
      //辅助参数，用于选择任务类型
      //任务
    	taskInfo: {}
    }
    methods = {

    }
    events = {}
    onLoad(options) {    
      console.log("EditMyTask onload");
      var id = JSON.parse(options.taskid);
      this.taskid = id;
      var that = this;
      
      wx.request({
        url: this.$parent.globalData.ip + 'search/task_id',
        method: 'POST',
        header: {
          'content-type': 'application/json'
        },
        data: {
          task_id: id
        },
        success: (res) =>{

          //问卷
          wx.request({
            url: that.$parent.globalData.ip + 'search/template_id',
            method: 'POST',
            header: {
              'content-type': 'application/json'
            },
            data: {
              template_id: res.data.template_id
            },
            success(r) {
              // console.log(r.data);
              var query = TemplateToQuery.change(r.data);
              var task = {
                id: res.data.id,
                title: res.data.title,
                sponsor: res.data.sponsor,
                type: res.data.type,
                start_time: caculateDate.DateToString(res.data.start_time),
                end_time: caculateDate.DateToString(res.data.end_time),
                pay: res.data.pay,
                detail: res.data.detail,
                receiver_limit: res.data.receiver_limit,
                finished_number: res.data.finished_number,
                state: res.data.state,
                extra_content: {
                  query: query,
                  images: []
                },
                receivers: []
              }
              that.taskInfo = task;
              console.log(task);
            },
            fail(res) {
              console.log('fail');
            }
          })
        }
      })

      console.log('EditMyTask end');
    }
    onShow() {
      console.log("EditMyTask onshow");
      var pages = getCurrentPages();
      var currPage = pages[pages.length - 1];   //当前页面
      this.isQueryChange = currPage.data.isQueryChange;
      if (this.isQueryChange) {
        this.taskInfo.extra_content.query = currPage.data.query;
      }
      console.log('EditMyTask end');
    }
  }
</script>
