<template>
  <view style="position: fixed; width: 100%; height: 100%;">
    <!-- 标题栏 -->
    <mynavbar title="首页" lefttext="" leftarrow="false"></mynavbar>
    <!-- 搜索栏 -->
    <van-search
      class="search"
      value=""
      placeholder="根据标题，详情，发布者等搜索任务"
      shape="round"
      disabled
      @tap="beginsearch"
    >
    </van-search>
    <!-- 页面主体 -->
    <view class="mainBody">
      <!-- 分类按钮 -->
      <view class="taskType">
        <view class="taskTypeButtonView">
          <CategoryBtnOnline icon="graphic" text="线上任务"></CategoryBtnOnline>
        </view>
        <view class="taskTypeButtonView">
          <CategoryBtnOffline icon="shop" text="线下任务"></CategoryBtnOffline>
        </view>
        <view class="taskTypeButtonView">
          <CategoryOthers icon="records" text="其他"></CategoryOthers>
        </view>
      </view>
      <!-- 任务列表 -->
      <view class="tasklistboard">
        <TopTitle title="热门推荐"></TopTitle>
        <scroll-view
          id="scroll-wrap"
          class="tasklist-view"
          scroll-y="true"
          bindscrolltolower="getNewData"
          lower-threshold="40"
          >
          <view
            style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center;"
            wx:if="{{init}}"
          >
            <van-loading type="spinner" size="40px"></van-loading>
          </view>
          <view
            id="inner-wrap"
            style="width: 100%; height: 100%;"
            bindtouchstart="touch_start"
            bindtouchend="touch_end"
            bindtouchmove="touch_move"
            wx:else
            >
            <view hidden="{{hideDragUp}}" style="width: 100%; height: {{dragUpHeight}}px; display: flex; justify-content: center; align-items: center; z-index: 1">
              <text style="font-size: 13px; padding-bottom: 30rpx">松开即可刷新</text>
            </view>
            <view wx:if="{{getdata}}">
              <tasklist :tasks.sync="tasks"></tasklist>
            </view>
            <view wx:else style="width: 500rpx; height: 500rpx; display: flex; justify-content: center; align-items: center; padding-left: 125rpx; padding-top: 100rpx; z-index: 2">
              <text style="font-size: 13px;">暂无更多内容</text>
            </view>
            <view wx:if="{{nomore && getdata}}">
              <BottomTitle title="已经到底啦"></BottomTitle>
            </view>
            <view wx:elif="{{getdata}}" style="width: 100%; display: flex; justify-content: center; align-items: center; margin-top: 10rpx;">
              <van-loading type="spinner" size="20px"></van-loading>
            </view>
          </view>
        </scroll-view>
      </view>
      <!--  底部导航栏 -->
      <mytabbar></mytabbar>
    </view>
  </view>
  <van-toast id="van-toast"></van-toast>
  <van-dialog id="van-dialog"></van-dialog>
</template>

<script>
  import wepy from 'wepy'
  import TaskList from '../components/tasklist'
  import MyTabbar from '../components/mytabbar'
  import MyNavBar from '../components/mynavbar'
  import MyMainPageTitle from '../components/myMainPageTitle'
  import MyMainPageCategoryBtn from '../components/myMainPageCategoryBtn'
  import Toast from '../components/van/toast/toast'
  import Dialog from '../components/van/dialog/dialog'
  import JsonToObject from '../data/JsonToObject'

  export default class MainPage extends wepy.page {
    config = {

    }
    components = {
      tasklist: TaskList,
      mytabbar: MyTabbar,
      mynavbar: MyNavBar,
      TopTitle: MyMainPageTitle,
      BottomTitle: MyMainPageTitle,
      CategoryBtnOnline: MyMainPageCategoryBtn,
      CategoryBtnOffline: MyMainPageCategoryBtn,
      CategoryOthers: MyMainPageCategoryBtn
    }
    data = {
      tasks: [],
      location: {},
      showCitySelector: false,
      areaList: {},
      location: {
        province: "获取定位",
        city: "获取定位",
        county: "获取定位"
      },
      // 获取任务相关
      loadingHide: true, // 下拉刷新是否显示加载符号
      loadingOpacity: 1,
      hideDragUp: true, // 是否可以下拉（防止重复）
      canDragDown: true, // 是否可以上拉加载更多
      dragUpHeight: 0,
      init: true,
      nomore: true,
      nodata: false,
      start_scroll_time: null,
      end_scroll_time: null,

      height: 0, // scroll-wrap 的高度
      inner_height: 0, // inner-wrap 的高度
      scroll_top: 0, // 滚动到的位置
      start_scroll: 0, // 滚动前的位置
      touch_down: 0, // 触摸时候的Y的位置

      // 之后可以删去
      dataIndex: 0,
      batch_size: 10,
      getdata: false
    }
    computed = {

    }
    methods = {
      // 任务数据相关
      getNewData() {
        /* 
          获取新的数据
        */
        var _this = this
        this.loadingOpacity = 1;
        if (this.canDragDown) {
          this.canDragDown = false;
          this.nomore = false
          this.$apply()
          wx.request({
            url: this.$parent.globalData.ip + 'recommend',
            method: 'POST',
            header: {
              'content-type': 'application/json'
            },
            data: {
              batch_size: this.dataIndex + this.batch_size,
              type: 'hot'
            },
            success: (res) => {
              this.canDragDown = true;
              if (res.data.task_number < this.dataIndex + this.batch_size) {
                // 不够10个
                this.nomore = true
              }
              else {
                this.nomore = false
              }
              for (; this.dataIndex < res.data.task_number; this.dataIndex++) {
                this.tasks.push(res.data.task_info[this.dataIndex])
                this.tasks[this.dataIndex].itemid = "task_item_id" + this.dataIndex

                //添加第一张图片
                this.tasks[this.dataIndex].images = JsonToObject.JsonToUrl(this.tasks[this.dataIndex].images, this.$parent.globalData.ip);
                if (this.tasks[this.dataIndex].images.length == 0) {
                  this.tasks[this.dataIndex].images = this.$parent.globalData.ip + 'task/makemoney.jpeg';
                }
                else {
                  this.tasks[this.dataIndex].images = this.tasks[this.dataIndex].images[0];
                }
                //.............
              }
              _this.loadingOpacity = 0
              _this.$apply()
              wx.createSelectorQuery().select('#inner-wrap').boundingClientRect((rect) => {
                _this.inner_height = rect.height;
              }).exec()
            },
            fail: (res) => {
              this.nomore = false
              this.dragUpHeight = 0
            }
          });
          
        }
      },
      /*
        touch_start和touch_end用于下拉刷新
      */
      touch_start(e) {
        this.start_scroll_time = new Date()
        let self = this
        this.touch_down = e.touches[0].clientY;
        // 获取inner-wrap的高度
        wx.createSelectorQuery().select('#inner-wrap').boundingClientRect((rect) => {
          self.inner_height = rect.height;
        }).exec()
        // 获取scroll-wrap的高度和当前scrollTop的值
        wx.createSelectorQuery().select('#scroll-wrap').fields({
          scrollOffset: true,
          size: true
        }, (rect) => {
          self.start_scroll = rect.scrollTop;
          self.height = rect.height;
        }).exec()
      },
      touch_end(e) {
        this.end_scroll_time = new Date()
        let current_y = e.changedTouches[0].clientY;
        let _this = this
        this.dragUpHeight = 0
        this.hideDragUp = true
        // 上拉
        if ((this.end_scroll_time - this.start_scroll_time)/1000 > 0.2 && current_y > this.touch_down && current_y - this.touch_down > 20 && this.start_scroll == 0) {
          this.loadingHide = false;
          this.hideDragUp = false
          _this.init = true
          setTimeout((res) => {
            this.refresh()
          }, 3000)  
        }
      },
      touch_move(e) {
        this.dragUpHeight = 1.0*(e.touches[0].clientY - this.touch_down)
      },
      beginsearch() {
        wepy.navigateTo({
          url: "searchResult"
        })
      }
    }
    events = {

    }
    refresh() {
      var _this = this
      this.batch_size = 10
      this.dataIndex = 0
      this.nomore = false
      this.init = true
      this.tasks = []
      wx.request({
        url: this.$parent.globalData.ip + 'recommend',
        method: 'POST',
        header: {
          'content-type': 'application/json'
        },
        data: {
          batch_size: this.dataIndex + this.batch_size,
          type: 'new'
        },
        success: (res) => {
          _this.getdata = true
          // 为了展示
          setTimeout((t) => {
            _this.init = false
            _this.loadingOpacity = 0
            if (res.data.task_number < this.dataIndex + this.batch_size) {
              // 不够10个
              this.nomore = true
            }
            else {
              this.nomore = false
            }
            if (res.data.task_number == 0) {
              this.dragUpHeight = 0
              this.nomore = true
            }
            for (; this.dataIndex < res.data.task_number; this.dataIndex++) {
              this.tasks.push(res.data.task_info[this.dataIndex])
              //添加第一张图片
              this.tasks[this.dataIndex].images = JsonToObject.JsonToUrl(this.tasks[this.dataIndex].images, this.$parent.globalData.ip);
              if (this.tasks[this.dataIndex].images.length == 0) {
                this.tasks[this.dataIndex].images = this.$parent.globalData.ip + 'task/makemoney.jpeg';
              }
              else {
                this.tasks[this.dataIndex].images = this.tasks[this.dataIndex].images[0];
              }
              //.............
              this.tasks[this.dataIndex].itemid = "task_item_id" + this.dataIndex
            }
            _this.$apply()
            if (!this.nodata) {
              wx.createSelectorQuery().select('#scroll-wrap').boundingClientRect((rect) => {
                _this.height = rect.height;
              }).exec()
              wx.createSelectorQuery().select('#inner-wrap').boundingClientRect((rect) => {
                _this.inner_height = rect.height;
              }).exec()
            }
            clearTimeout(this.$parent.globalData.refreshtimer)
          }, 100)
        },
        fail: (res) => {
          this.dragUpHeight = 0
          this.nomore = true
          Dialog.confirm({
            message: '加载失败，请重新加载'
          }).then((res) => {
            this.$parent.globalData.refreshtimer = setTimeout((res) => {
              this.refresh()
            }, 3000)
          }).catch((res) => {
            clearTimeout(this.$parent.globalData.refreshtimer)
            this.init = false
            _this.getdata = false
            this.$apply()
          })
        }
      });
    }
    onLoad() {
      this.refresh()
    }
    onShow() {
      // this.refresh()
      this.$broadcast('changeActive', "0");
    }
  }
</script>
<style lang="less">
  .mainBody {
    height: 100%;
    width: 100%;

  }
  .taskType {
    width: 100%;
    height: 10%;
    display: flex;
    flex-direction: row;
  }
  .taskTypeButtonView {
    height: 100%;
    width: 50%;
  }
  .taskTypeButton {
    width: 100%;
    height: 200px;
    display: flex;
    justify-content: center;
    align-item: center;
  }
  .tasklistboard {
    width: 100%;
    height: 65%;
  }
  .taskboard {
    width: 90%;
    height: 5%;
    text-align: left;
    margin-top: 2.5%;
    margin-left: 2%;
    font-size: small; 
  }
  .tabbar {
    height: 10%;
  }
  ::-webkit-scrollbar{
    width: 0;
    height: 0;
    color: transparent;
  }
  .tasklist-view {
    height: 90%;
  }
</style>
