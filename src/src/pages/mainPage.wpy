<template>
  <view style="position: fixed; width: 100%; height: 100%;">
    <!-- 标题栏 -->
    <mynavbar title="首页" lefttext="" leftarrow="false"></mynavbar>
    <!-- 搜索栏 -->
    <van-search
      class="search"
      value=""
      placeholder="搜索任务，用户等"
      shape="round"
      disabled
      @tap="beginsearch"
    >
<!--       <view slot="label" style="width: 70px;" @tap="selectLoc">
        <van-row>
          <van-col span="6">
            <van-icon name="location-o" size="15px"></van-icon>
          </van-col>
          <text style="font-size: small;">{{location.city}}</text>
        </van-row>
        
        
      </view> -->
    </van-search>
    <!-- 页面主体 -->
    <view class="mainBody">
      <!-- 分类按钮 -->
      <view class="taskType">
        <view class="taskTypeButtonView">
          <CategoryBtnOnline icon="graphic" text="线上任务"></CategoryBtnOnline>
        </view>
        <view class="taskTypeButtonView">
          <CategoryBtnOffline icon="shop" text="线下任务"></CategoryBtnOffline>
        </view>
      </view>
      <!-- 任务列表 -->
      <view class="tasklistboard">
        <TopTitle title="热门推荐"></TopTitle>
        <scroll-view
          id="scroll-wrap"
          class="tasklist-view"
          scroll-y="true"
          bindscrolltolower="getNewData"
          lower-threshold="100"
          >
          <view
            style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center;"
            wx:if="{{init}}"
          >
            <van-loading type="spinner" size="40px"></van-loading>
          </view>
          <view
            id="inner-wrap"
            style="width: 100%;"
            bindtouchstart="touch_start"
            bindtouchend="touch_end"
            wx:else
            >
            <view style="width: 100%; display: flex; justify-content: center; align-items: center; margin-top: 10rpx;">
              <van-loading hide="{{loadingHide}}" type="spinner" size="20px"></van-loading>
            </view>
            <tasklist :tasks.sync="tasks"></tasklist>
            <view wx:if="{{nomore}}">
              <BottomTitle title="已经到底啦"></BottomTitle>
            </view>
            <view wx:else style="width: 100%; display: flex; justify-content: center; align-items: center; margin-top: 10rpx;">
              <van-loading opacity="{{loadingOpacity}}" type="spinner" size="20px"></van-loading>
            </view>
          </view>
        </scroll-view>
      </view>
      <!--  底部导航栏 -->
      <mytabbar></mytabbar>
    </view>
  </view>
<!--   <van-popup
    show="{{showCitySelector}}"
    position="bottom"
  >
    <van-area
      area-list="{{areaList}}"
      @confirm="locConfirm"
      @cancel="locCancel"
    ></van-area>
  </van-popup> -->
</template>

<script>
  import wepy from 'wepy'
  import TaskList from '../components/tasklist'
  import MyTabbar from '../components/mytabbar'
  // import AreaList from '../utility/area'
  import TasksData from '../data/TempTaskData'
  import MyNavBar from '../components/mynavbar'
  import MyMainPageTitle from '../components/myMainPageTitle'
  import MyMainPageCategoryBtn from '../components/myMainPageCategoryBtn'
  import Toast from '../components/van/toast/toast'

  export default class MainPage extends wepy.page {
    config = {
      // "backgroundColor":"#fff",
      // "backgroundTextStyle":"dark",
    }
    components = {
      tasklist: TaskList,
      mytabbar: MyTabbar,
      mynavbar: MyNavBar,
      TopTitle: MyMainPageTitle,
      BottomTitle: MyMainPageTitle,
      CategoryBtnOnline: MyMainPageCategoryBtn,
      CategoryBtnOffline: MyMainPageCategoryBtn
    }
    data = {
      tasks: [],
      location: {},
      showCitySelector: false,
      areaList: {},
      location: {
        province: "获取定位",
        city: "获取定位",
        county: "获取定位"
      },
      // 获取任务相关
      loadingHide: true, // 下拉刷新是否显示加载符号
      loadingOpacity: 1,
      canDragUp: true, // 是否可以下拉（防止重复）
      canDragDown: true, // 是否可以上拉加载更多
      init: true,
      nomore: true,

      height: 0, // scroll-wrap 的高度
      inner_height: 0, // inner-wrap 的高度
      scroll_top: 0, // 滚动到的位置
      start_scroll: 0, // 滚动前的位置
      touch_down: 0, // 触摸时候的Y的位置

      // 之后可以删去
      dataIndex: 0,
      batch_size: 10
    }
    computed = {

    }
    methods = {
      // 选择地址
      // selectLoc() {
      //   this.showCitySelector = true;
      // },
      // locConfirm(e) {
      //   var value = e.detail.values;
      //   this.location.province = value[0].name;
      //   this.location.city = value[1].name;
      //   this.location.county = value[2].name;
      //   this.showCitySelector = false;
      // },
      // locCancel() {
      //   this.showCitySelector = false;
      // },
      // 任务数据相关
      getNewData() {
        /* 
          获取新的数据
        */
        var _this = this
        if (this.canDragDown) {
          this.canDragDown = false;
          this.loadingOpacity = 1;
          this.$apply()
          if (this.dataIndex >= TasksData.data.tasks.length) {
            this.dataIndex = 0;
          }
          setTimeout(() => {
            for (var i = 0; i < this.batch_size; i++) {
              this.tasks.push(TasksData.data.tasks[this.dataIndex])
              this.tasks[this.dataIndex].itemid = "task_item_id" + this.dataIndex
              this.dataIndex += 1
              if (this.dataIndex == TasksData.data.tasks.length) break;
            }
            this.canDragDown = true;
            this.loadingOpacity = 0;
            this.$apply();
          }, 3000);
        }
      },
      /*
        touch_start和touch_end用于下拉刷新
      */
      touch_start(e) {
        let self = this
        this.touch_down = e.touches[0].clientY;
        // 获取inner-wrap的高度
        wx.createSelectorQuery().select('#inner-wrap').boundingClientRect((rect) => {
          self.inner_height = rect.height;
        }).exec()
        // 获取scroll-wrap的高度和当前scrollTop的值
        wx.createSelectorQuery().select('#scroll-wrap').fields({
          scrollOffset: true,
          size: true
        }, (rect) => {
          self.start_scroll = rect.scrollTop;
          self.height = rect.height;
        }).exec()
      },
      touch_end(e) {
        let current_y = e.changedTouches[0].clientY;
        let _this = this
        if (current_y > this.touch_down && current_y - this.touch_down > 20 && this.start_scroll == 0) {
          this.loadingHide = false;
          setTimeout((res) => {
            _this.loadingHide = true;
            _this.$apply()
          }, 3000)  
        }
      },
      beginsearch() {
        // if (!this.showCitySelector) {
          
        // }
        wepy.navigateTo({
          url: "searchResult"
        })
      }
    }
    events = {

    }
    onLoad() {
      var _this = this

      wx.request({
        url: this.$parent.globalData.ip + 'recommend',
        method: 'POST',
        header: {
          'content-type': 'application/json'
        },
        data: {
          batch_size: this.batch_size
        },
        success: (res) => {
          console.log(res.data);
          // 为了展示
          setTimeout((t) => {
            _this.init = false
            _this.loadingOpacity = 0
            for (var i = 0; i < res.data.task_number; i++) {
              this.tasks.push(res.data.task_info[i])
              this.tasks[i].itemid = "task_item_id" + i
              // this.dataIndex += 1
            }
            _this.$apply()
            wx.createSelectorQuery().select('#scroll-wrap').boundingClientRect((rect) => {
              _this.height = rect.height;
            }).exec()
            wx.createSelectorQuery().select('#inner-wrap').boundingClientRect((rect) => {
              _this.inner_height = rect.height;
            }).exec()
            if (res.data.task_number == 0) this.nomore = true;
            else this.nomore = false
          }, 2000)
        },
        fail: (res) => {
          console.log(res)
          this.nomore = true
        },
        complete: (res) => {
          console.log('complete')
        }
      });

      // if (TasksData.data.tasks.length < 5) {
      //   this.tasks = TasksData.data.tasks;
      //   this.dataIndex = TasksData.data.tasks.length;
      //   this.canDragDown = false;
      //   for (var i = 0; i < this.dataIndex; i++)
      //     this.tasks[i].itemid = "task_item_id" + i
      // }
      // else {
      //   for (var i = 0; i < this.batch_size; i++) {
      //     this.tasks.push(TasksData.data.tasks[i])
      //     this.tasks[i].itemid = "task_item_id" + i
      //     this.dataIndex += 1
      //   }
      // }
      // this.areaList = AreaList;
      // wepy.getLocation({
      //   type: 'gcj02',
      //   success: function(address) {
      //     var QQMapWX = require('../qqmap-sdk/qqmap-wx-jssdk.js')
      //     var qqmapsdk = new QQMapWX({
      //       key: 'Z7ZBZ-INFRD-J2H47-PEF53-KYYYS-GVFEM'
      //     })
      //     var mylocation = {
      //       latitude: address.latitude,
      //       longitude: address.longitude
      //     }
      //     qqmapsdk.reverseGeocoder({
      //       location: mylocation,
      //       success: function(res) {
      //         res = res.result.address_component
      //         _this.location.province = res.province
      //         _this.location.city = res.city
      //         _this.location.county = res.district
      //         _this.$apply()
      //       }
      //     })
      //   }
      // });
    }
    onShow() {
      this.$broadcast('changeActive', "0");
    }
  }
</script>
<style lang="less">
  .mainBody {
    height: 100%;
    width: 100%;

  }
  .taskType {
    width: 100%;
    height: 10%;
    display: flex;
    flex-direction: row;
  }
  .taskTypeButtonView {
    height: 100%;
    width: 50%;
  }
  .taskTypeButton {
    width: 100%;
    height: 200px;
    display: flex;
    justify-content: center;
    align-item: center;
  }
  .tasklistboard {
    width: 100%;
    height: 65%;
  }
  .taskboard {
    width: 90%;
    height: 5%;
    text-align: left;
    margin-top: 2.5%;
    margin-left: 2%;
    font-size: small; 
  }
  .tabbar {
    height: 10%;
  }
  ::-webkit-scrollbar{
    width: 0;
    height: 0;
    color: transparent;
  }
  .tasklist-view {
    height: 87%;
  }
</style>
