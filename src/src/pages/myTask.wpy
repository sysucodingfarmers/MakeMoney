<style lang="less">
  .page{
    line-height: 1.6;
    background-color: #f8f8f8;
    height:100%;

  }
  ::-webkit-scrollbar{
    width: 0;
    height: 0;
    color: transparent;
  }
</style>
<template>
  <view style="position: fixed; height: 100%; width: 100%;">
    <mynavbar title="{{title}}" lefttext="返回" leftarrow="true"></mynavbar>
    <!-- 主体 -->
    <van-tabs active="{{active}}" bind:change="onChange">
      <repeat for="{{category.list}}" item="item">
        <van-tab title="{{item}}">
          <view></view>
        </van-tab>
      </repeat>
    </van-tabs>
    <scroll-view scroll-y="true" style="height: 80%; margin-top: 5%;">
      <tasklist :tasks.sync="showTasks"></tasklist>
    </scroll-view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import MyNavBar from '../components/mynavbar'
  // import TasksData from '../data/TempTaskData'
  import TaskList from '../components/tasklist'

  export default class MyTask extends wepy.page {
    data = {
      title: "默认",
      type: 0,
      tasks: [],
      category: {
        list: []
      },
      listType: 0,
      showTasks: []
    }
    components = {
      mynavbar: MyNavBar,
      tasklist: TaskList
    }
    methods = {
      onChange() {
        console.log("change list")
        this.listType = this.listType == 0 ? 1 : 0;
        this.showTasks = [];
        if (this.type == 0) {
          if (this.listType == 0) {
            this.tasks.forEach(item=>{
              if (item.state == 0 || item.state == 1) {
                this.showTasks.push(item);
              }
            })
          }
          else {
            this.tasks.forEach(item=>{
              if (item.state == 2) {
                this.showTasks.push(item);
              }
            })
          }
        }
        else if (this.type == 1) {
          if (this.listType == 0) {
            this.tasks.forEach(item=>{
              if (!item.finished) {
                this.showTasks.push(item);
              }
            })
          }
          else {
            this.tasks.forEach(item=>{
              if (item.finished) {
                this.showTasks.push(item);
              }
            })
          }
        }
        this.$apply();
      }
    }
    onLoad(options) {
      console.log('mytask onload');
      this.tasks = [];
      if (options.type == "publish") {
        this.type = 0;
        this.title = "我的发布";
        var that = this;
        this.category.list = ['进行中', '已结束']
        
        //通过发起者id查看taskid
        var id = this.$root.$parent.globalData.userInfo.id;
        wx.request({
          url: this.$parent.globalData.ip + 'task/mysponsor',
          method: 'POST',
          header: {
            'content-type': 'application/json'
          },
          data: {
            id: id
          },
          success(res) {
            console.log(res.data);
            for (var i = 0; i < res.data.task_number; ++i) {
              that.tasks.push({
                id: res.data.task_id[i],
                title: res.data.task_title[i],
                detail: res.data.task_detail[i],
                type: res.data.task_type[i],
                state: res.data.task_state[i]
              });
            }

            if (that.listType == 0) {
              that.tasks.forEach(item=>{
                if (item.state == 0 || item.state == 1) {
                  that.showTasks.push(item);
                }
              })
            }
            else {
              that.tasks.forEach(item=>{
                if (item.state == 2) {
                  that.showTasks.push(item);
                }
              })
            }

            that.$apply();
          },
          fail(res) {
            console.log('fail');
          }
        });       
      }
      else {
        this.type = 1;
        this.title = "我的接单";
        var that = this;
        this.category.list = ['未完成', '已完成']

        //通过接受者id查看taskid
        var id = this.$root.$parent.globalData.userInfo.id;
        var tasks_id;
        wx.request({
          url: this.$parent.globalData.ip + 'task/myreceive',
          method: 'POST',
          header: {
            'content-type': 'application/json'
          },
          data: {
            id: id
          },
          success(res) {
            console.log(res.data);
            for (var i = 0; i < res.data.task_number; ++i) {
              that.tasks.push({
                id: res.data.task_id[i],
                title: res.data.task_title[i],
                detail: res.data.task_detail[i],
                type: res.data.task_type[i],
                finished: res.data.finished[i]
              });
            }

            if (that.listType == 0) {
              that.tasks.forEach(item=>{
                if (!item.finished) {
                  that.showTasks.push(item);
                }
              })
            }
            else {
              that.tasks.forEach(item=>{
                if (item.finished) {
                  that.showTasks.push(item);
                }
              })
            }

            that.$apply();
          },
          fail(res) {
            console.log('fail');
          }
        });
      }
      console.log('mytask end');
    }
    onShow() {
      console.log('mytask onshow');
      this.$broadcast("setTitle", this.title);
      console.log('mytask end');
    }
  }
</script>
